{"version":3,"sources":["components/Section.js","api.js","components/PageLoading.js","routes/Home/Main.js","routes/Home/PageError.js","routes/Home/Content.js","routes/Home/Home.js","components/PageTitle.js","routes/Detail/CoverVideo.js","routes/Detail/DetailCon.js","routes/Detail/Detail.js","Globalstyle.js","components/Header.js","routes/Search/Search.js","components/ScrollMove.js","App.js","components/Footer.js","index.js"],"names":["SSection","styled","section","Section","children","api","axios","create","baseURL","params","api_key","language","moviesApi","get","id","term","query","loadingAni","keyframes","LoadingWrap","div","Load","PageLoading","SMain","TitleWrap","Title","h3","Desc","p","Main","pop","style","backgroundImage","backdrop_path","title","overview","slice","Wrap","PageError","to","Container","MovieTitle","CoverImg","SwiperCore","use","Navigation","Content","nowPlay","spaceBetween","slidesPerView","breakpoints","navigation","map","play","pathname","Home","useState","setNowPlay","setPop","coming","setComing","rated","setRated","loading","setLoading","pageError","setPageError","useEffect","a","nowPlaying","data","results","popular","topRated","console","log","movieData","PageTitle","iframe","Video","CoverVideo","video","img","src","frameborder","allow","allowfullscreen","ConWrap","ListWrap","ReleaseDate","h4","List","RunTime","DetailCon","release_date","genres","runtime","genre","index","name","Detail","movieId","useParams","details","setDetils","setVideo","detailData","dataDe","videoData","length","key","error","GlobalStyles","createGlobalStyle","reset","SHeader","header","props","bg","Logo","MenuWrap","Menu","Header","setBg","window","addEventListener","sct","pageYOffset","Form","form","Input","input","SearchWrap","Con","Bg","Search","searchResult","setSearchResult","noSearch","setNoSearch","useForm","mode","register","getValues","handleSubmit","onSubmit","required","type","placeholder","background","ScrollMove","location","useLocation","scrollTo","App","path","exact","SFooter","footer","Footer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8e6bfa62.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst SSection = styled.section`\n  padding: 0 80px;\n  @media screen and (max-width: 500px) {\n    padding: 0 15px;\n  }\n`;\n\nexport const Section = ({ children }) => {\n  return <SSection>{children}</SSection>;\n};\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://api.themoviedb.org/3/\",\n  params: {\n    api_key: \"127c866ecb9630df124cbd4e2522af1c\",\n    language: \"ko-KR\",\n  },\n});\n\nexport const moviesApi = {\n  nowPlaying: () => api.get(\"movie/now_playing\"),\n  popular: () => api.get(\"movie/popular\"),\n  upcoming: () => api.get(\"movie/upcoming\"),\n  top_rated: () => api.get(\"movie/top_rated\"),\n  detail: (id) => api.get(`movie/${id}`),\n  video: (id) => api.get(`movie/${id}/videos`),\n  search: (term) =>\n    api.get(\"search/movie\", {\n      params: {\n        query: term,\n      },\n    }),\n};\n","import styled, { keyframes } from \"styled-components\";\n\nconst loadingAni = keyframes`\n    0%{\n        transform:rotateZ(0)\n    }\n    100%{\n        transform:rotateZ(360deg)\n    }\n`;\n\nconst LoadingWrap = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Load = styled.div`\n  width: 100px;\n  height: 100px;\n  border: 10px solid crimson;\n  border-radius: 50%;\n  border-color: crimson transparent crimson transparent;\n  animation: ${loadingAni} 1s infinite;\n`;\n\nexport const PageLoading = () => {\n  return (\n    <LoadingWrap>\n      <Load></Load>\n    </LoadingWrap>\n  );\n};\n","import styled from \"styled-components\";\n\nconst SMain = styled.section`\n  width: 100%;\n  height: 900px;\n  background-color: #333;\n  background-size: cover;\n  background-position: top;\n  padding: 300px 0 0 80px;\n  @media screen and (max-width: 500px) {\n    height: 60vh;\n    padding: 200px 0 0 15px;\n  }\n`;\n\nconst TitleWrap = styled.div`\n  text-shadow: 0 0 10px rgba(0 0 0 / 70%);\n`;\n\nconst Title = styled.h3`\n  font-size: 100px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  @media screen and (max-width: 500px) {\n    font-size: 50px;\n  }\n`;\n\nconst Desc = styled.p`\n  max-width: 600px;\n  width: 100%;\n  font-size: 20px;\n  line-height: 30px;\n  font-weight: 400;\n  @media screen and (max-width: 500px) {\n    width: 90%;\n    font-size: 16px;\n    line-height: 22px;\n  }\n`;\n\nexport const Main = ({ pop }) => {\n  return (\n    <SMain\n      style={{\n        backgroundImage: `url(https://image.tmdb.org/t/p/original${pop.backdrop_path})`,\n      }}\n    >\n      <TitleWrap>\n        <Title>{pop.title}</Title>\n        <Desc>{pop.overview.slice(0, 70) + \"...\"}</Desc>\n      </TitleWrap>\n    </SMain>\n  );\n};\n","import { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst Wrap = styled.div`\n  height: 100vh;\n  display: flex;\n  align-items: center;\n  padding-top: 300px;\n  flex-direction: column;\n  text-align: center;\n`;\n\nconst Title = styled.h3`\n  max-width: 500px;\n  font-size: 100px;\n  font-weight: 800;\n`;\n\nconst Desc = styled.p`\n  font-size: 20px;\n  margin-top: 30px;\n  line-height: 30px;\n  opacity: 0.7;\n  font-weight: 200;\n  a {\n    color: crimson;\n    text-decoration: underline;\n  }\n`;\n\nexport const PageError = () => {\n  return (\n    <Wrap>\n      <Title>Page Not Found</Title>\n      <Desc>\n        페이지를 찾을수 없어나, 오류가 생겼어요..! <br />\n        뒤로가기 버튼을 클릭하시거나, <Link to=\"/\">홈으로</Link> 가주세요.\n      </Desc>\n    </Wrap>\n  );\n};\n","import styled from \"styled-components\";\nimport { Swiper, SwiperSlide } from \"swiper/react\";\nimport \"../../styles/swiper.css\";\nimport SwiperCore, { Navigation } from \"swiper\";\nimport { Link } from \"react-router-dom\";\n\nconst Title = styled.h3`\n  font-size: 40px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  @media screen and (max-width: 500px) {\n    font-size: 25px;\n  }\n`;\n\nconst Container = styled.div`\n  margin-top: 100px;\n  @media screen and (max-width: 500px) {\n    margin-top: 50px;\n  }\n`;\n\nconst MovieTitle = styled.h3`\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 20px;\n  @media screen and (max-width: 500px) {\n    font-size: 15px;\n    margin-top: 10px;\n  }\n`;\n\nconst CoverImg = styled.div`\n  height: 180px;\n  background-repeat: no-repeat;\n  background-size: cover;\n  background-position: center;\n  @media screen and (max-width: 500px) {\n    height: 100px;\n  }\n`;\n\nSwiperCore.use([Navigation]);\n\nexport const Content = ({ title, nowPlay }) => {\n  const params = {\n    spaceBetween: 20,\n    slidesPerView: 5.3,\n    breakpoints: {\n      1024: {\n        spaceBetween: 20,\n        slidesPerView: 5.3,\n      },\n      320: {\n        spaceBetween: 10,\n        slidesPerView: 2.2,\n      },\n    },\n  };\n\n  return (\n    <Container>\n      <Title>{title}</Title>\n      <Swiper {...params} navigation>\n        {nowPlay &&\n          nowPlay.map((play) => (\n            <SwiperSlide key={play.id}>\n              <Link to={{ pathname: `/detail/${play.id}` }}>\n                <CoverImg\n                  style={{\n                    backgroundImage: `url(\n                      ${\n                        play.backdrop_path\n                          ? `https://image.tmdb.org/t/p/original${play.backdrop_path}`\n                          : \"https://i.ytimg.com/vi/5SuveFZ5_H0/maxresdefault.jpg\"\n                      }\n                    )`,\n                  }}\n                />\n                <MovieTitle>{play.title}</MovieTitle>\n              </Link>\n            </SwiperSlide>\n          ))}\n      </Swiper>\n    </Container>\n  );\n};\n","import { Section } from \"../../components/Section\";\nimport { moviesApi } from \"../../api\";\nimport { useEffect, useState } from \"react\";\nimport { PageLoading } from \"../../components/PageLoading\";\nimport { Main } from \"./Main\";\nimport { PageError } from \"./PageError\";\nimport { Content } from \"./Content\";\n\nexport const Home = () => {\n  const [nowPlay, setNowPlay] = useState();\n  const [pop, setPop] = useState();\n  const [coming, setComing] = useState();\n  const [rated, setRated] = useState();\n  const [loading, setLoading] = useState(true);\n  const [pageError, setPageError] = useState(false);\n\n  useEffect(() => {\n    const movieData = async () => {\n      try {\n        const {\n          data: { results: nowPlaying },\n        } = await moviesApi.nowPlaying();\n        setNowPlay(nowPlaying);\n\n        const {\n          data: { results: popular },\n        } = await moviesApi.popular();\n        setPop(popular);\n\n        const {\n          data: { results: coming },\n        } = await moviesApi.upcoming();\n        setComing(coming);\n\n        const {\n          data: { results: topRated },\n        } = await moviesApi.top_rated();\n        setRated(topRated);\n\n        setLoading(false);\n      } catch (error) {\n        setPageError(true);\n        console.log(error);\n      }\n    };\n    movieData();\n  }, []);\n\n  // console.log(\"현재상영\", nowPlay);\n  // console.log(\"인기\", pop);\n  // console.log(\"상영예정\", coming);\n  // console.log(\"순위\", rated);\n\n  return (\n    <div>\n      {loading ? (\n        <PageLoading />\n      ) : (\n        <div>\n          {pageError ? (\n            <PageError />\n          ) : (\n            <div>\n              {pop ? <Main pop={pop[0]} /> : null}\n\n              <Section>\n                <Content title=\"현재 상영 영화\" nowPlay={nowPlay} />\n                <Content title=\"상영 예정\" nowPlay={coming} />\n                <Content title=\"인기 영화\" nowPlay={pop} />\n                <Content title=\"영화 순위\" nowPlay={rated} />\n              </Section>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Helmet } from \"react-helmet-async\";\n\nexport const PageTitle = ({ title }) => {\n  return (\n    <Helmet>\n      <title>{`PN movie | ${title}`}</title>\n    </Helmet>\n  );\n};\n","import styled from \"styled-components\";\n\nconst CoverImg = styled.iframe`\n  width: 45%;\n  height: 70vh;\n  background-size: cover;\n  background-position: center;\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst Video = styled.iframe`\n  width: 45%;\n  height: 70vh;\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nexport const CoverVideo = ({ video, img }) => {\n  return (\n    <>\n      {video === \"\" ? (\n        <CoverImg\n          style={{\n            backgroundImage: `url(https://image.tmdb.org/t/p/original/${img})`,\n          }}\n        />\n      ) : (\n        <Video\n          src={`https://www.youtube.com/embed/${video}`}\n          title=\"YouTube video player\"\n          frameborder=\"0\"\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\n          allowfullscreen\n        />\n      )}\n    </>\n  );\n};\n","import styled from \"styled-components\";\n\nconst ConWrap = styled.div`\n  width: 50%;\n  display: flex;\n  flex-direction: column;\n  padding-top: 50px;\n  @media screen and (max-width: 500px) {\n    width: 100%;\n  }\n`;\n\nconst Title = styled.div`\n  font-size: 70px;\n  font-weight: 700;\n  margin-bottom: 30px;\n  @media screen and (max-width: 500px) {\n    font-size: 40px;\n  }\n`;\n\nconst ListWrap = styled.div`\n  display: flex;\n  font-size: 20px;\n  font-weight: 500;\n  margin-bottom: 15px;\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n  }\n`;\n\nconst ReleaseDate = styled.h4`\n  font-size: 20px;\n  margin-bottom: 15px;\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n  }\n`;\n\nconst List = styled.h4``;\n\nconst RunTime = styled.h4``;\n\nconst Desc = styled.p`\n  margin-top: 50px;\n  font-size: 20px;\n  line-height: 30px;\n  opacity: 0.7;\n  @media screen and (max-width: 500px) {\n    font-size: 16px;\n  }\n`;\n\nexport const DetailCon = ({\n  title,\n  release_date,\n  genres,\n  runtime,\n  overview,\n}) => {\n  return (\n    <ConWrap>\n      <Title>{title}</Title>\n      <ReleaseDate>{release_date}</ReleaseDate>\n      <ListWrap>\n        장르:\n        {genres.map((genre, index) => (\n          <List key={index}>&nbsp;&nbsp;{genre.name}, </List>\n        ))}\n      </ListWrap>\n      <RunTime>런타임: {runtime}</RunTime>\n      <Desc>{overview}</Desc>\n    </ConWrap>\n  );\n};\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { moviesApi } from \"../../api\";\nimport { PageLoading } from \"../../components/PageLoading\";\nimport { Section } from \"../../components/Section\";\nimport { PageError } from \"../Home/PageError\";\nimport { PageTitle } from \"../../components/PageTitle\";\nimport { CoverVideo } from \"./CoverVideo\";\nimport { DetailCon } from \"./DetailCon\";\n\nconst Container = styled.div`\n  padding-top: 150px;\n  display: flex;\n  justify-content: space-between;\n  @media screen and (max-width: 500px) {\n    flex-direction: column;\n  }\n`;\n\nexport const Detail = () => {\n  const { movieId } = useParams();\n  const [details, setDetils] = useState();\n  const [video, setVideo] = useState();\n  const [pageError, setPageError] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    try {\n      const detailData = async () => {\n        const { data: dataDe } = await moviesApi.detail(movieId);\n        setDetils(dataDe);\n\n        const {\n          data: { results: videoData },\n        } = await moviesApi.video(movieId);\n        videoData.length > 0 ? setVideo(videoData[0].key) : setVideo(\"\");\n      };\n      setLoading(false);\n      detailData();\n    } catch (error) {\n      setPageError(true);\n    }\n  }, [movieId]);\n\n  return (\n    <div>\n      <PageTitle title={details && details.title} />\n      {loading ? (\n        <PageLoading />\n      ) : (\n        <div>\n          {pageError ? (\n            <PageError />\n          ) : (\n            <Section>\n              {details ? (\n                <Container>\n                  <CoverVideo video={video} img={details?.backdrop_path} />\n\n                  <DetailCon\n                    title={details.title}\n                    release_date={details.release_date}\n                    genres={details.genres}\n                    runtime={details.runtime}\n                    overview={details.overview}\n                  />\n                </Container>\n              ) : null}\n            </Section>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nexport const GlobalStyles = createGlobalStyle`\n    ${reset}\n\n    *{ box-sizing:border-box;}\n\n    body{\n        font-family: 'Noto Sans KR', sans-serif;\n        background-color: #1d1d1d;\n        color: white;\n        letter-spacing: -1px;\n    }\n\n    a{\n        text-decoration: none;\n        color:white;\n    }\n\n`;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nconst SHeader = styled.header`\n  width: 100%;\n  height: 60px;\n  padding: 0 80px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 99;\n  background-color: ${(props) => props.bg};\n  @media screen and (max-width: 500px) {\n    padding: 0 15px;\n  }\n`;\n\nconst Logo = styled.div`\n  font-size: 28px;\n  font-weight: 700;\n  a {\n    color: crimson;\n  }\n`;\n\nconst MenuWrap = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst Menu = styled.div`\n  font-weight: 600;\n  margin-left: 50px;\n`;\n\nexport const Header = () => {\n  const [bg, setBg] = useState(\"\");\n\n  const scrollHandler = () => {\n    const sct = window.pageYOffset;\n\n    if (sct >= 200) {\n      setBg(\"#1d1d1d\");\n    } else {\n      setBg(\"transparent\");\n    }\n  };\n\n  window.addEventListener(\"scroll\", scrollHandler);\n\n  return (\n    <SHeader bg={bg}>\n      <Logo>\n        <Link to=\"/\">PATI</Link>\n      </Logo>\n\n      <MenuWrap>\n        <Menu>\n          <Link to=\"/\">홈</Link>\n        </Menu>\n        <Menu>\n          <Link to=\"/search\">탐색하기</Link>\n        </Menu>\n      </MenuWrap>\n    </SHeader>\n  );\n};\n","import { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { Link } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { moviesApi } from \"../../api\";\nimport { PageLoading } from \"../../components/PageLoading\";\nimport { Section } from \"../../components/Section\";\nimport { PageError } from \"../Home/PageError\";\nimport { PageTitle } from \"../../components/PageTitle\";\n\nconst Container = styled.div`\n  margin-top: 150px;\n`;\n\nconst Form = styled.form``;\n\nconst Input = styled.input`\n  all: unset;\n  width: 100%;\n  padding: 20px;\n  border: 1px solid #555;\n  &::placeholder {\n    font-size: 20px;\n  }\n  font-size: 20px;\n`;\n\nconst SearchWrap = styled.div`\n  width: 100%;\n  margin-top: 100px;\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  row-gap: 50px;\n  column-gap: 20px;\n`;\n\nconst Con = styled.div``;\n\nconst Bg = styled.div`\n  /* width: 315px; */\n  height: 180px;\n`;\n\nconst Title = styled.h3`\n  font-size: 18px;\n  font-weight: 500;\n  margin-top: 20px;\n  @media screen and (max-width: 500px) {\n    font-size: 15px;\n    margin-top: 10px;\n  }\n`;\n\nexport const Search = () => {\n  const [searchResult, setSearchResult] = useState();\n  const [noSearch, setNoSearch] = useState(\"\");\n  const [pageError, setPageError] = useState(false);\n  const [loading, setLoading] = useState(true);\n\n  const { register, getValues, handleSubmit } = useForm({\n    mode: \"onChange\",\n  });\n\n  const onSubmit = async () => {\n    const { term } = getValues();\n\n    try {\n      const {\n        data: { results },\n      } = await moviesApi.search(term);\n\n      if (results.length <= 0) {\n        setNoSearch(\"검색결과가 없습니다 🤔\");\n      } else {\n        setNoSearch(\"\");\n        setSearchResult(results);\n      }\n\n      setLoading(false);\n    } catch (error) {\n      setPageError(true);\n    }\n  };\n\n  return (\n    <div>\n      <PageTitle title={\"검색\"} />\n      <Section>\n        <Container>\n          <Form onSubmit={handleSubmit(onSubmit)}>\n            <Input\n              {...register(\"term\", {\n                required: true,\n              })}\n              type=\"text\"\n              placeholder=\"검색...\"\n            />\n          </Form>\n\n          {pageError ? (\n            <PageError />\n          ) : (\n            <>\n              <SearchWrap>\n                {searchResult && loading ? (\n                  <PageLoading />\n                ) : (\n                  <>\n                    {noSearch === \"\" ? (\n                      searchResult &&\n                      searchResult.map((term) => (\n                        <Link key={term.id} to={`/detail/${term.id}`}>\n                          <Con>\n                            <Bg\n                              style={{\n                                background: `url(${\n                                  term.backdrop_path\n                                    ? `https://image.tmdb.org/t/p/original${term.backdrop_path}`\n                                    : \"https://i.ytimg.com/vi/5SuveFZ5_H0/maxresdefault.jpg\"\n                                }) center / cover`,\n                              }}\n                            />\n                            <Title>{term.title}</Title>\n                          </Con>\n                        </Link>\n                      ))\n                    ) : (\n                      <h1>{noSearch}</h1>\n                    )}\n                  </>\n                )}\n              </SearchWrap>\n            </>\n          )}\n        </Container>\n      </Section>\n    </div>\n  );\n};\n","import { useEffect } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nexport const ScrollMove = () => {\n  const location = useLocation();\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [location]);\n\n  return null;\n};\n","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Home } from \"./routes/Home/Home\";\nimport { Detail } from \"./routes/Detail/Detail\";\nimport { GlobalStyles } from \"./Globalstyle\";\nimport { Header } from \"./components/Header\";\nimport { Search } from \"./routes/Search/Search\";\nimport { ScrollMove } from \"./components/ScrollMove\";\n\nfunction App() {\n  return (\n    <Router>\n      <GlobalStyles />\n      <ScrollMove />\n      <Header />\n      <Switch>\n        <Route path=\"/\" exact>\n          <Home />\n        </Route>\n\n        <Route path=\"/detail/:movieId\">\n          <Detail />\n        </Route>\n\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import styled from \"styled-components\";\n\nconst SFooter = styled.footer`\n  height: 80px;\n  margin-top: 200px;\n  border-top: 1px solid #333;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  color: #555;\n`;\n\nexport const Footer = () => {\n  return <SFooter>&copy; patiname</SFooter>;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HelmetProvider } from \"react-helmet-async\";\nimport App from \"./App\";\nimport { Footer } from \"./components/Footer\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HelmetProvider>\n      <App />\n      <Footer />\n    </HelmetProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}